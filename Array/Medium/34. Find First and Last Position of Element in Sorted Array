class Solution {
public:
int lastindex(vector<int> &nums,int target){
    int start=0;
        int end=nums.size()-1;
        int mid=start+(end-start)/2;
        int ans=-1;
        while(start<=end){
            if(nums[mid]==target){
                ans=mid;
                start=mid+1;
            }
            else if(nums[mid]>target){
                end=mid-1;
            }
            else{
                start=mid+1;
            }
            mid=start+(end-start)/2;
        }
        return ans;
}
    int firstindex(vector<int> &nums,int target){
        int start=0;
        int end=nums.size()-1;
        int mid=start+(end-start)/2;
        int ans=-1;
        while(start<=end){
            if(nums[mid]==target){
                ans=mid;
                end=mid-1;
            }
            else if(nums[mid]>target){
                end=mid-1;
            }
            else{
                start=mid+1;
            }
            mid=start+(end-start)/2;
        }
        return ans;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        int s=0;
        int e=nums.size()-1;
        int findex=firstindex(nums,target);
        int eindex=lastindex(nums,target);
        vector<int> result;
        result.push_back(findex);
        result.push_back(eindex);
        return result; 
    }
};
